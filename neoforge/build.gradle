plugins {
    id 'net.neoforged.moddev'
}

version = mod_version
base {
    archivesName = mod_id
}

neoForge {
    version = neoforge_version

    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }

    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})"
        }
        client {
            client()
        }
        data {
            data()

            programArguments.addAll '--mod', "${mod_id}", '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }

    dependencies {
        // compile against the JEI API but do not include it at runtime
        compileOnly("mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}")
        // at runtime, use the full JEI jar for NeoForge
        runtimeOnly("mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}")

        implementation("com.github.glitchfiend:GlitchCore-neoforge:${minecraft_version}-${glitchcore_version}")
        implementation("com.github.glitchfiend:TerraBlender-neoforge:${minecraft_version}-${terrablender_version}")
    }

    accessTransformers
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
public net.minecraft.world.effect.MobEffect <init>(Lnet.minecraft.world.effect.MobEffectCategory;I)V
public net.minecraft.util.random.WeightedEntry m_146290_(Ljava.lang.Object;I)Lnet.minecraft.util.random.WeightedEntry$Wrapper; # wrap

public net.minecraft.world.entity.LivingEntity shouldDropExperience()Z # shouldDropExperience
public net.minecraft.world.entity.monster.Monster shouldDropExperience()Z # shouldDropExperience
public net.minecraft.world.entity.monster.hoglin.Hoglin shouldDropExperience()Z # shouldDropExperience

public net.minecraft.world.item.alchemy.PotionBrewing f_43494_ # POTION_MIXES
public net.minecraft.world.item.alchemy.PotionBrewing f_43495_ # CONTAINER_MIXES

public net.minecraft.world.item.crafting.RecipeManager byType # byType
public net.minecraft.world.item.crafting.RecipeManager byName # byName

public-f net.minecraft.client.renderer.item.ItemProperties f_117825_ # PROPERTIES

protected-f net.minecraft.world.item.Item  maxStackSize # maxStackSize

protected-f net.minecraft.world.level.block.AbstractCauldronBlock interactions # interactions

public net.minecraft.data.worldgen.placement.OrePlacements orePlacement(Lnet.minecraft.world.level.levelgen.placement.PlacementModifier;Lnet.minecraft.world.level.levelgen.placement.PlacementModifier;)Ljava.util.List; # orePlacement
public net.minecraft.data.worldgen.placement.OrePlacements commonOrePlacement(ILnet.minecraft.world.level.levelgen.placement.PlacementModifier;)Ljava.util.List; # commonOrePlacement

public net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal targetType # targetType

public net.minecraft.data.loot.BlockLoot m_124126_(Lnet.minecraft.world.level.ItemLike;)Lnet.minecraft.world.level.storage.loot.LootTable$Builder; # createSingleItemTable
public net.minecraft.data.loot.BlockLoot m_124134_(Lnet.minecraft.world.level.ItemLike;Lnet.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder;)Ljava.lang.Object; # applyExplosionCondition
public net.minecraft.data.loot.BlockLoot f_124067_ # EXPLOSION_RESISTANT

public net.minecraft.data.worldgen.biome.OverworldBiomes globalOverworldGeneration(Lnet.minecraft.world.level.biome.BiomeGenerationSettings$Builder;)V # globalOverworldGeneration
public net.minecraft.data.worldgen.biome.OverworldBiomes biome(Lnet.minecraft.world.level.biome.Biome$Precipitation;Lnet.minecraft.world.level.biome.Biome$BiomeCategory;FFLnet.minecraft.world.level.biome.MobSpawnSettings$Builder;Lnet.minecraft.world.level.biome.BiomeGenerationSettings$Builder;Lnet.minecraft.sounds.Music;)Lnet.minecraft.world.level.biome.Biome; # biome
public net.minecraft.data.worldgen.biome.OverworldBiomes biome(Lnet.minecraft.world.level.biome.Biome$Precipitation;Lnet.minecraft.world.level.biome.Biome$BiomeCategory;FFIILnet.minecraft.world.level.biome.MobSpawnSettings$Builder;Lnet.minecraft.world.level.biome.BiomeGenerationSettings$Builder;Lnet.minecraft.sounds.Music;)Lnet.minecraft.world.level.biome.Biome; # biome

public net.minecraft.world.level.block.AbstractCauldronBlock canReceiveStalactiteDrip(Lnet.minecraft.world.level.material.Fluid;)Z # canReceiveStalactiteDrip
public net.minecraft.world.level.block.CauldronBlock canReceiveStalactiteDrip(Lnet.minecraft.world.level.material.Fluid;)Z # canReceiveStalactiteDrip
public net.minecraft.world.level.block.LayeredCauldronBlock canReceiveStalactiteDrip(Lnet.minecraft.world.level.material.Fluid;)Z # canReceiveStalactiteDrip

public net.minecraft.world.level.biome.MultiNoiseBiomeSource parameters # parameters

public net.minecraft.client.renderer.texture.atlas.SpriteResourceLoader <init>(Ljava.util.List;)V # SpriteResourceLoader

public net.minecraftforge.common.loot.LootModifier codecStart(Lcom.mojang.serialization.codecs.RecordCodecBuilder$Instance;)Lcom.mojang.datafixers.Products$P1; # codecStart

public net.minecraft.world.level.biome.OverworldBiomeBuilder addBiomes(Ljava.util.function.Consumer;)V # addBiomes

public net.minecraft.resources.HolderSetCodec homogenousListCodec